现在很多GALGAME输出文字都是使用GetGlyphOutline函数来实现的。
这个函数每次传入一个字符的参数，将其转换成矩阵，再利用BitBlt等函数来绘图输出文字。
然而，每一种编码方式都是有编码范围的，例如日语的编码范围就是从0x80~0xA0以及0xE0~0xFC（双字中的低字节）。
为了避免输入无效的字符造成程序出错，一般在调用GetGlyphOutline函数前都会有如下一段检查的代码：

cmp     al, 80
jbe     short 0040676F
cmp     al, 0A0
jb      short 00406777
cmp     al, 0E0
jb      short 004067D0
cmp     al, 0FC
ja      short 004067D0


　　
当传入的参数是0xA0~0xE0之间的值的时候就代表这是无效的编码，函数直接跳走处理。
然而，对于中文来说，GBK编码的范围比日文大得多，
假如汉化的时候不修改上述的判断的时候会让程序误以为传入的是无效的字符而将原来的字符编码打乱，造成乱码。

解决这个方法只需将判断边界的代码中0xA0以及0xFC改成GBK编码的上界0xFE即可。 